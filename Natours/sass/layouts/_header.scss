// similar to components but bigger in complexity
.header{
    /* set height to 95% of viewport */
    height:85vh;
    /* gradient and image are 2 images on2 on top of the other */
    /* gradient goes from color1 to color2 from top left to bottom right */
    background-image: linear-gradient(
    to right bottom,
    rgba($color-primary-light, 0.8),
    rgba($color-primary-dark, 0.8)),
     url('../img/hero-small.jpg');
    /* fits the image to viewport width */
    background-size: cover;
    /* the top of the image stays ( doesnot get cropped) when viewport is compressed */
    background-position: top;
    -webkit-clip-path: polygon(0 0,100% 0,100% 85vh,0 100%);
    clip-path: polygon(0 0,100% 0,100% 75vh,0 100%);

    // feature query
    @supports(clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)){
        -webkit-clip-path: polygon(0 0,100% 0,100% 85vh,0 100%);
        clip-path: polygon(0 0,100% 0,100% 75vh,0 100%);
        height:95vh;
    }
    



    // this is resolution of apple retina screen and it is used as a reference. 192 dots per inch.
    // It is high resolution screen. mobiles have high pixel density and henceby default high quality image will beloaded
    // for mobile phones. avoiding that with and extension.
    // for large screens load original image
    @media only screen and (min-resolution:192dpi) and (min-width:37.5em),
    (-webkit-min-device-pixel-ratio:2) and (min-width:37.5em),
    (min-width:125em) {
        background-image: linear-gradient(
            to right bottom,
            rgba($color-primary-light, 0.8),
            rgba($color-primary-dark, 0.8)),
             url('../img/hero.jpg');
    }

    

    @include respond(phone){
        -webkit-clip-path: polygon(0 0,100% 0,100% 85vh,0 100%);
        clip-path: polygon(0 0,100% 0,100% 85vh,0 100%);
    }

    position: relative;

    &__logo-box{
       position: absolute;
       top: 4rem;
       left: 4rem;
    }
    &__logo{
       height: 3.5rem;
   }
   &__text-box{
       /* position the element w.r.t its parent */
       position: absolute;
       top: 40%;
       left: 50%;
       /* position the element w.r.t the element itself */
       transform: translate(-50%,-50%);
       text-align: center;
   }
}